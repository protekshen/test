@import "../../../styles/variables";
@import "../../../styles/components/avatar/common.encapsulated";

$avatar-text-color: $primary-color !default;
$avatar-icon-color: $blue-500 !default;

$avatar-shape-circle: 'circle';
$avatar-shape-square: 'square';

$avatar-bg: $gray-500 !default;

$avatar-shapes: (
  #{$avatar-shape-circle}: (
    border-radius: 50%
  ),
  #{$avatar-shape-square}: (
    border-radius: 0
  ),
)!default;

@mixin size($size) {
  min-width: #{map-get($size, size)};
  width: #{map-get($size, size)};
  min-height: #{map-get($size, size)};
  height: #{map-get($size, size)};
  [icon][child-of=#{$jnt-avatar-host}] {
    font-size: #{map-get($size, iconSize)};
  }
  [text][child-of=#{$jnt-avatar-host}] {
    font-size: #{map-get($size, textSize)};
  }
}

@mixin shape($property, $shape) {
  #{$property}: #{map-get($shape, border-radius)};

}

jnt-avatar[host=#{$jnt-avatar-host}] {
  display: flex;
  justify-content: center;
  align-items: center;
  line-height: 0;
  background-color: $avatar-bg;
  overflow: hidden;
  @each $size, $map in $avatar-sizes {
    &[size='#{$size}'] {
      @include size($map);
    }
  }
  @each $shape, $value in $avatar-shapes {
    &[shape='#{$shape}'] {
      @include shape(border-radius, $value);
    }
  }
}

[text][child-of=#{$jnt-avatar-host}] {
  color: $avatar-text-color;
  font-weight: $font-weight-bold;
}

[icon][child-of=#{$jnt-avatar-host}] {
  color: $avatar-icon-color;
}

[image][child-of=#{$jnt-avatar-host}] {
  width: 100%;
  height: 100%;
}
